package Array;

public class PeakElement {

	public static void main(String args[]) {
		int nums[] ={-1,-2,17, 1, 4, 6, 9, 10, 12, 0, 16, 18, 19} ;
		System.out.println( new PeakElement().findPeakElement(nums) );
	}

	public int findPeakElement(int[] nums) {
		return findPeakBinary(nums, 0, nums.length-1);     
	}

	public int findPeakBinary(int[] nums, int low, int high) {

		if( high == low  )
			return low;

		if( high - low == 1 ){
			if(nums[high] > nums[low] )
				return high;
			else 
				return low;
		}

		int mid = low+ (high-low)/2;

		//if mid is peak return mid
		if( nums[mid-1] < nums[mid] && nums[mid] > nums[mid+1])
			return mid;

		// If mid is not peak and its left neighbor is greater than it, 
		// then look for peak in left half of sub arrau
		else if(nums[mid-1] > nums[mid] )
			return findPeakBinary(nums,  low,  mid-1) ;

		// If mid is not peak and its right neighbor is greater than it, 
		// then look for peak in right half of arrau
		else if(nums[mid] < nums[mid+1])
			return findPeakBinary(nums,  mid+1,  high) ;

		return 0;
	}

}
